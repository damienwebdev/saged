<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Case Western Reserve University</title>
<!--css-->
                <link rel="stylesheet" href="css/default.css" media ="all"/>
                <link rel="stylesheet" href="css/styles.css" media="screen" />
                <link rel="stylesheet" href="css/tablet.css" media="screen and (min-width:0px) and (max-width:63em)"/>
                <link rel="stylesheet" href="css/desktop.css" media="screen and (min-width:64em)"/>
				<link rel="stylesheet" type="text/css" href="css/nav/component.css" />
        
        <!--scripts-->
		<script src="js/nav/modernizr.custom.js"></script>
       	<script src="js/nav/classie.js"></script>
		<script src="js/nav/gnmenu.js"></script>

    <script src="https://sagecell.sagemath.org/static/jquery.min.js"></script>
    <script src="https://sagecell.sagemath.org/static/embedded_sagecell.js"></script>
    <script>$(function () {
    // Make the div with id 'mycell' a Sage cell
    sagecell.makeSagecell({inputLocation:  '.mycell',
                           template:       sagecell.templates.minimal,
                           evalButtonText: 'Activate'});
    });
    </script>
</head>
<body>
<div class = "wrapper">
<!--#include virtual="ssi/header.html" -->

<div class="contentWrapper">
<div class="contentContainer">
<div class="threeColumnHorizontal">
	<div class="small">
    	<h2 class="blueBox" id="pageTitle">Vigen&eacute;re Cipher</h2>
    </div>
    
<div class="big">
	 <div class="mycell" style="text-align:center;">
<script type="text/x-sage">
@interact
def f(message = input_box('Beware the Jabberwock, my son!', label = "Plain text", type = str), key = input_box('VIGENERECIPHER', label = "Key word", type = str)):
	from itertools import starmap, cycle 
	def encrypt(message, key):
		message = filter(lambda _: _.isalpha(), message.upper())
		def enc(c,k): return chr(((ord(k) + ord(c)) %26) + ord('A'))
		return "".join(starmap(enc, zip(message, cycle(key))))
	encr = encrypt(message, key)
	pretty_print(html("%s" % (encr))) 
</script>
	</div>
    
    <div class="mycell" style="text-align:center;">
<script type="text/x-sage">
@interact
def f(message = input_box('WMCEEIKLGRPIFVMEUGXQPWQV', label = "Encrypted string", type = str), key = input_box('VIGENERECIPHER', label = "Key word", type = str)):
	from itertools import starmap, cycle 
	def decrypt(message, key):                                                                                                                                
		def dec(c,k): return chr(((ord(c) - ord(k)) % 26) + ord('A'))
		return "".join(starmap(dec, zip(message, cycle(key))))
	decr = decrypt(message, key)
	pretty_print(html("%s" % (decr)))
</script>
	</div>
</div>
 
   <div class="small">
    <h2 class="blueBox">Notes</h2>
   </div>
The Vigenère Cipher takes an input string and a key. Using addition modulo 26, the Vigenère Cipher simulates the <em>tabula recta</em>, shown below, to return a deciphered or an encrypted string.  
<div class="notes"><img src="images/tabularecta.png" alt="Tabula Recta (from Wikipedia)"/></div>   

   <div class="small">
    <p></p>
    </div>
    

</div>


</div><!--end of container-->
</div><!--end of content wrapper-->
</div><!--end of wrapper-->


<!--#include virtual="ssi/simpleFooter.html" -->

</body>
</html>
\